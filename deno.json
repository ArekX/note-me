{
    "lock": true,
    "tasks": {
        "cli": "deno run -A cli/mod.ts",
        "cache": "deno cache -r --lock deno.lock --allow-scripts=npm:fsevents main.ts cli/mod.ts frontend/deps.ts",
        "cache-ci": "deno cache --lock deno.lock --allow-scripts=npm:fsevents main.ts cli/mod.ts frontend/deps.ts",
        "check": "deno fmt --check && deno lint && deno run -A check.ts",
        "fresh-cli": "echo \"import '\\$fresh/src/dev/cli.ts'\" | deno run --unstable -A -",
        "manifest": "deno task fresh-cli manifest $(pwd)",
        "dev": "deno run -A --watch=static/,routes/ --check dev.ts",
        "update": "deno run -A -r https://fresh.deno.dev/update .",
        "build-docker": "docker build --build-arg BUILD_ID=$(date +%s) . -t arekxv/note-me:$(git describe --tags --abbrev=0)",
        "build-podman": "podman build --build-arg BUILD_ID=$(date +%s) . -t \"arekxv/note-me:$(git describe --tags --abbrev=0)\"",
        "build-assets": "deno run -A build.ts build",
        "production": "deno run -A main.ts",
        "debug": "deno run --inspect-wait -A dev.ts",
        "preview": "deno run -A main.ts",
        "build": "deno run -A dev.ts build"
    },
    "lint": { "rules": { "tags": ["fresh", "recommended"] } },
    "exclude": ["**/_fresh/*"],
    "fmt": { "indentWidth": 4 },
    "imports": {
        "$fresh/": "https://deno.land/x/fresh@1.7.3/",
        "preact": "https://esm.sh/preact@10.22.0",
        "preact/": "https://esm.sh/preact@10.22.0/",
        "@preact/signals": "https://esm.sh/*@preact/signals@1.2.2",
        "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.5.1",
        "tailwindcss": "npm:tailwindcss@3.3.5",
        "tailwindcss/": "npm:/tailwindcss@3.3.5/",
        "tailwindcss/plugin": "npm:/tailwindcss@3.3.5/plugin.js",
        "$std/": "https://deno.land/std@0.224.0/",
        "$components/": "./components/",
        "$islands/": "./islands/",
        "$backend/": "./backend/",
        "$workers/": "./workers/",
        "$schemas/": "./schemas/",
        "$frontend/": "./frontend/",
        "$cli/": "./cli/",
        "$lib/": "./lib/",
        "$types": "./types/mod.ts",
        "$tests/": "./tests/",
        "$db": "./workers/database/lib.ts"
    },
    "compilerOptions": { "jsx": "react-jsx", "jsxImportSource": "preact" },
    "nodeModulesDir": "auto"
}
